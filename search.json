[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Phylogenetic Comparative Methods in R - Solutions",
    "section": "",
    "text": "Preface\nThis book contains solutions to the exercises in the book Phylogenetic Comparative Methods in R (Revell and Harmon 2022)."
  },
  {
    "objectID": "index.html#setup",
    "href": "index.html#setup",
    "title": "Phylogenetic Comparative Methods in R - Solutions",
    "section": "Setup",
    "text": "Setup\nTo run the code in this book, you will need to install R (&gt;=4.2.0) and the following packages:\n\n# Install BiocManager\ninstall.packages(\"BiocManager\")\n\n# Use BiocManager to install required packages\npackages &lt;- c(\n    \"ape\",\n    \"phytools\",\n    \"treeio\", \n    \"ggtree\", \n    \"here\", \n    \"phangorn\",\n    \"geiger\",\n    \"ggplot2\",\n    \"patchwork\"\n)\n\nBiocManager::install(packages)\n\nAfter that, you should have everything ready."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Phylogenetic Comparative Methods in R - Solutions",
    "section": "References",
    "text": "References\n\n\n\n\nRevell, Liam J, and Luke J Harmon. 2022. Phylogenetic Comparative Methods in r. Princeton University Press."
  },
  {
    "objectID": "chapter_01.html#practice-problems",
    "href": "chapter_01.html#practice-problems",
    "title": "1  A brief introduction to phylogenetics in R",
    "section": "1.1 Practice problems",
    "text": "1.1 Practice problems\n\nDownload the following two files for Phelsuma geckos from the book website: phel.csv and phel.phy (Harmon et al. 2010). phel.csv is a CSV file containing trait values for ten different morphological traits. phel.phy is a phylogeny of thirty-three species. Read both data and tree in from file and use name.check() to identify any differences between the two data sets. If you find differences, prune the phylogeny and subsample the trait data to include only the species present in both the data file and the tree. Plot the tree.\n\n\n# Get data\npheno_data &lt;- read.csv(\n    \"http://www.phytools.org/Rbook/1/phel.csv\", row.names = 1\n)\ntree &lt;- read.tree(\"http://www.phytools.org/Rbook/1/phel.phy\")\n\n# Taking a look at the data\nhead(pheno_data)\n\n                 svl      jaw    noseye     eyed   eyeeye        hw       hn\nabbotti     53.66667 14.43333  6.666667 3.033333 4.166667 10.033333 22.10000\nastriata    51.38462 13.20000  6.381818 2.500000 4.045455  8.691667 20.95833\nborbonica   66.20000 16.43000  7.960000 2.800000 4.840000 12.060000 25.43000\ncepedianaA  51.80000 13.22667  6.226667 2.406667 4.166667  9.433333 21.49333\ndubia       53.06250 13.21333  6.300000 2.075000 4.418750  8.950000 21.56875\nguentheri  117.00000 28.70000 14.450000 5.100000 8.950000 22.500000 45.35000\n                jaww       uhl       lhl\nabbotti     9.050000  9.433333  6.766667\nastriata    7.180000  8.250000  5.983333\nborbonica  10.633333 10.942857  7.612500\ncepedianaA  8.008333  8.180000  5.654545\ndubia       7.690000  8.366667  5.753333\nguentheri  17.400000 16.600000 11.100000\n\ntree\n\n\nPhylogenetic tree with 33 tips and 32 internal nodes.\n\nTip labels:\n  comoraegrandensis, vnigra, anjouanensis, robertmertensi, pasteuri, laticauda, ...\n\nRooted; includes branch lengths.\n\n# Checking for differences between the data sets\ncheck &lt;- name.check(tree, pheno_data)\ncheck\n\n$tree_not_data\n [1] \"andamanense\"       \"anjouanensis\"      \"cepedianaB\"       \n [4] \"comoraegrandensis\" \"edwardnewtoni\"     \"gigas\"            \n [7] \"inexpectata\"       \"kochi\"             \"leiogaster\"       \n[10] \"parkeri\"           \"pasteuri\"          \"rosagularis\"      \n[13] \"serraticauda\"      \"vnigra\"           \n\n$data_not_tree\n[1] \"cepedianaA\"\n\n# Pruning the tree to match data\nfinal_tree &lt;- drop.tip(tree, check$tree_not_data)\nfinal_tree\n\n\nPhylogenetic tree with 19 tips and 18 internal nodes.\n\nTip labels:\n  robertmertensi, laticauda, lineata, comorensis, quadriocellata, dubia, ...\n\nRooted; includes branch lengths.\n\n# Keep in the data frame only taxa that are in the tree\nfinal_pheno &lt;- pheno_data[final_tree$tip.label, ]\nhead(final_pheno)\n\n                    svl      jaw noseye     eyed   eyeeye       hw       hn\nrobertmertensi 47.60000 12.30000 5.9625 2.350000 3.710000 8.480000 20.00000\nlaticauda      50.93750 13.12500 6.1250 2.226667 4.375000 9.156250 20.56875\nlineata        46.02000 12.22800 5.6000 2.157447 4.058000 8.665957 19.45800\ncomorensis     47.14286 12.37143 5.8000 2.100000 3.933333 8.714286 19.81429\nquadriocellata 53.00000 13.75000 6.0000 2.200000 4.450000 9.900000 21.15000\ndubia          53.06250 13.21333 6.3000 2.075000 4.418750 8.950000 21.56875\n                   jaww      uhl      lhl\nrobertmertensi 7.350000 7.575000 5.250000\nlaticauda      7.969231 8.316667 5.891667\nlineata        7.241304 7.202703 5.182051\ncomorensis     7.114286 7.314286 5.380000\nquadriocellata 8.350000 8.250000 5.900000\ndubia          7.690000 8.366667 5.753333\n\n# Plot the tree\nplot(final_tree)\n\n\n\n\n\nUse phyl.pca() to run a phylogenetic principal component analysis (PCA) of the morphological data set and tree from practice problem 1. When data for different variables in a PCA have different orders of magnitude, it often makes sense to transform by the natural logarithm and conduct our analysis on the log-transformed values instead of on the original traits. Inspect your data to see if this applies and then decide whether or not to log-transform before undertaking your phylogenetic PCA. After you’ve obtained a result for the PCA, create a screeplot to visualize the distribution of variation between the different principal component axes.\n\n\n# Perform phylogenetic PCA\npca &lt;- phyl.pca(final_tree, final_pheno)\npca\n\nPhylogenetic pca\nStandard deviations:\n        PC1         PC2         PC3         PC4         PC5         PC6 \n0.843018016 0.031026258 0.025212345 0.021589766 0.016268797 0.013849981 \n        PC7         PC8         PC9        PC10 \n0.007047147 0.005435102 0.004776059 0.003284026 \nLoads:\n             PC1         PC2          PC3          PC4           PC5\nsvl    0.9999053 -0.01000824  0.006871026 -0.003374178 -0.0002305335\njaw    0.9961933  0.04141104  0.040942394 -0.030008137  0.0197234893\nnoseye 0.9961428 -0.02767322  0.040672296 -0.019964183 -0.0483030086\neyed   0.9219025  0.06912433  0.000145796 -0.140928915 -0.2706281183\neyeeye 0.9664016  0.12525023 -0.060244831  0.014826908  0.2041541534\nhw     0.9905783  0.07880385 -0.057263869 -0.087077681  0.0166403194\nhn     0.9961222  0.07041295 -0.015318076  0.048329317 -0.0140345807\njaww   0.9808645 -0.04636245 -0.184855183 -0.022132188 -0.0220226136\nuhl    0.9867331 -0.13722798 -0.049202943  0.041799930  0.0236962841\nlhl    0.9772051 -0.11752704 -0.009169470  0.121780363  0.0546134754\n                PC6           PC7           PC8           PC9          PC10\nsvl    -0.005382531 -0.0008324387 -0.0007677909  0.0004646226  0.0004164433\njaw     0.047441908  0.0248727578 -0.0058814817  0.0031244424 -0.0021247618\nnoseye  0.015724732 -0.0006341286  0.0430018976  0.0023434645 -0.0211047680\neyed    0.190365638 -0.0379885680  0.0621004043  0.0581208337  0.0854421226\neyeeye -0.044275914  0.0044588748  0.0467763913  0.0234067434  0.0116596316\nhw      0.023674650 -0.0256000605 -0.0016469256 -0.0134127827 -0.0027369653\nhn      0.002434144  0.0011243296  0.0005459473 -0.0027775843 -0.0002157374\njaww   -0.002093613  0.0190151420 -0.0042700446  0.0142197382 -0.0047639416\nuhl     0.039274297  0.0139984260  0.0132246100 -0.0286562314  0.0078761587\nlhl     0.101021863 -0.0486908262 -0.0123355346  0.0234627715 -0.0090268595\n\n# Create a screeplot with variance explained by each PC\np_screeplot &lt;- data.frame(\n    Variance = signif(as.princomp(pca)$sdev ^ 2, 2),\n    PC = factor(paste0(\"PC\", 1:10), levels = paste0(\"PC\", 1:10))\n) |&gt;\n    ggplot(aes(x = PC, y = Variance * 100)) +\n    geom_col(fill = \"dodgerblue4\", color = \"black\") +\n    geom_text(aes(label = Variance), vjust = -0.3) +\n    ylim(0, 100) +\n    labs(\n        title = \"Screeplot for phylogenetic PCA of Phelsuma sp. morphological traits\",\n        x = \"\", y = \"Variance explained (%)\"\n    ) +\n    theme_bw()\n\np_screeplot\n\n\n\n\n\nUse phylomorphospace() to create a single projection of the phylogeny into morphospace for the first two PC axes from practice problem 1.2. Can you think of a way to project the tree into a space defined by more than two principal component dimensions? Hint: look up the help pages for phylomorphospace3d() and phyloScattergram() for ideas, or consider simply subdividing your plotting device using par(mfrow).\n\n\n# Create phylomorphospace plot for different pairwise combinations of PCs\ncombs &lt;- list(\n    c(1, 2),\n    c(1, 3),\n    c(2, 3),\n    c(1, 4)\n)\n\np_pms &lt;- lapply(combs, function(x) {\n    ## Get phylomorphospace coordinates\n    score_df &lt;- as.data.frame(scores(pca)[, x])\n    cols &lt;- names(score_df)\n    \n    pms &lt;- phylomorphospace(\n        final_tree, score_df\n    )\n    coord &lt;- data.frame(\n        xstart = pms$xx[pms$edge[, 1]],\n        ystart = pms$yy[pms$edge[, 1]],\n        xstop = pms$xx[pms$edge[, 2]],\n        ystop = pms$yy[pms$edge[, 2]],\n        nodestart = pms$edge[, 1],\n        nodestop = pms$edge[, 2]\n    )\n    \n    p_phylomorphospace &lt;- ggplot() +\n        geom_point(\n            data = score_df, \n            aes(x = .data[[cols[1]]], y = .data[[cols[2]]]), \n            size = 3, color = \"darkblue\"\n        ) +\n        geom_segment(\n            data = coord, aes(x = xstart, y = ystart, xend = xstop, yend = ystop), \n            size = 0.5\n        ) +\n        theme_classic() +\n        labs(x = cols[1], y = cols[2])\n    \n    return(p_phylomorphospace)\n})\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Arrange plots in a panel\nwrap_plots(p_pms) +\n    plot_annotation(\n        title = \"Phylomorphospace of different pairwise combinations of PCs\"\n    )"
  },
  {
    "objectID": "chapter_01.html#references",
    "href": "chapter_01.html#references",
    "title": "1  A brief introduction to phylogenetics in R",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_02.html#references",
    "href": "chapter_02.html#references",
    "title": "2  Phylogenetically independent contrasts",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_03.html#references",
    "href": "chapter_03.html#references",
    "title": "3  Phylogenetic generalized least squares",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_04.html#references",
    "href": "chapter_04.html#references",
    "title": "4  Modeling continuous character evolution on a phylogeny",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_05.html#references",
    "href": "chapter_05.html#references",
    "title": "5  Multi-rate, multi-regime, and multivariate models for continuous traits",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_06.html#references",
    "href": "chapter_06.html#references",
    "title": "6  Modeling discrete character evolution on a phylogeny",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_07.html#references",
    "href": "chapter_07.html#references",
    "title": "7  Other models of discrete character evolution",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_08.html#references",
    "href": "chapter_08.html#references",
    "title": "8  Reconstructing ancestral states",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_09.html#references",
    "href": "chapter_09.html#references",
    "title": "9  Analysis of diversification with phylogenies",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_10.html#references",
    "href": "chapter_10.html#references",
    "title": "10  Time- and density-dependent diversification",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_11.html#references",
    "href": "chapter_11.html#references",
    "title": "11  Character-dependent diversification",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_12.html#references",
    "href": "chapter_12.html#references",
    "title": "12  Biogeography and phylogenetic community ecology",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_13.html#references",
    "href": "chapter_13.html#references",
    "title": "13  Plotting phylogenies and comparative data",
    "section": "References",
    "text": "References"
  }
]