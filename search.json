[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Phylogenetic Comparative Methods in R - Solutions",
    "section": "",
    "text": "Preface\nThis book contains solutions to the exercises in the book Phylogenetic Comparative Methods in R (Revell and Harmon 2022)."
  },
  {
    "objectID": "index.html#setup",
    "href": "index.html#setup",
    "title": "Phylogenetic Comparative Methods in R - Solutions",
    "section": "Setup",
    "text": "Setup\nTo run the code in this book, you will need to install R (&gt;=4.2.0) and the following packages:\n\n# Install BiocManager\ninstall.packages(\"BiocManager\")\n\n# Use BiocManager to install required packages\npackages &lt;- c(\n    \"ape\",\n    \"phytools\",\n    \"treeio\", \n    \"ggtree\", \n    \"here\", \n    \"phangorn\",\n    \"geiger\",\n    \"ggplot2\",\n    \"patchwork\"\n)\n\nBiocManager::install(packages)\n\nAfter that, you should have everything ready."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Phylogenetic Comparative Methods in R - Solutions",
    "section": "References",
    "text": "References\n\n\n\n\nRevell, Liam J, and Luke J Harmon. 2022. Phylogenetic Comparative Methods in r. Princeton University Press."
  },
  {
    "objectID": "chapter_01.html#practice-problems",
    "href": "chapter_01.html#practice-problems",
    "title": "1  A brief introduction to phylogenetics in R",
    "section": "1.1 Practice problems",
    "text": "1.1 Practice problems\n\nDownload the following two files for Phelsuma geckos from the book website: phel.csv and phel.phy (Harmon et al. 2010). phel.csv is a CSV file containing trait values for ten different morphological traits. phel.phy is a phylogeny of thirty-three species. Read both data and tree in from file and use name.check() to identify any differences between the two data sets. If you find differences, prune the phylogeny and subsample the trait data to include only the species present in both the data file and the tree. Plot the tree.\n\n\n# Get data\npheno_data &lt;- read.csv(\n    \"http://www.phytools.org/Rbook/1/phel.csv\", row.names = 1\n)\ntree &lt;- read.tree(\"http://www.phytools.org/Rbook/1/phel.phy\")\n\n# Taking a look at the data\nhead(pheno_data)\n\n                 svl      jaw    noseye     eyed   eyeeye        hw       hn\nabbotti     53.66667 14.43333  6.666667 3.033333 4.166667 10.033333 22.10000\nastriata    51.38462 13.20000  6.381818 2.500000 4.045455  8.691667 20.95833\nborbonica   66.20000 16.43000  7.960000 2.800000 4.840000 12.060000 25.43000\ncepedianaA  51.80000 13.22667  6.226667 2.406667 4.166667  9.433333 21.49333\ndubia       53.06250 13.21333  6.300000 2.075000 4.418750  8.950000 21.56875\nguentheri  117.00000 28.70000 14.450000 5.100000 8.950000 22.500000 45.35000\n                jaww       uhl       lhl\nabbotti     9.050000  9.433333  6.766667\nastriata    7.180000  8.250000  5.983333\nborbonica  10.633333 10.942857  7.612500\ncepedianaA  8.008333  8.180000  5.654545\ndubia       7.690000  8.366667  5.753333\nguentheri  17.400000 16.600000 11.100000\n\ntree\n\n\nPhylogenetic tree with 33 tips and 32 internal nodes.\n\nTip labels:\n  comoraegrandensis, vnigra, anjouanensis, robertmertensi, pasteuri, laticauda, ...\n\nRooted; includes branch lengths.\n\n# Checking for differences between the data sets\ncheck &lt;- name.check(tree, pheno_data)\ncheck\n\n$tree_not_data\n [1] \"andamanense\"       \"anjouanensis\"      \"cepedianaB\"       \n [4] \"comoraegrandensis\" \"edwardnewtoni\"     \"gigas\"            \n [7] \"inexpectata\"       \"kochi\"             \"leiogaster\"       \n[10] \"parkeri\"           \"pasteuri\"          \"rosagularis\"      \n[13] \"serraticauda\"      \"vnigra\"           \n\n$data_not_tree\n[1] \"cepedianaA\"\n\n# Pruning the tree to match data\nfinal_tree &lt;- drop.tip(tree, check$tree_not_data)\nfinal_tree\n\n\nPhylogenetic tree with 19 tips and 18 internal nodes.\n\nTip labels:\n  robertmertensi, laticauda, lineata, comorensis, quadriocellata, dubia, ...\n\nRooted; includes branch lengths.\n\n# Keep in the data frame only taxa that are in the tree\nfinal_pheno &lt;- pheno_data[final_tree$tip.label, ]\nhead(final_pheno)\n\n                    svl      jaw noseye     eyed   eyeeye       hw       hn\nrobertmertensi 47.60000 12.30000 5.9625 2.350000 3.710000 8.480000 20.00000\nlaticauda      50.93750 13.12500 6.1250 2.226667 4.375000 9.156250 20.56875\nlineata        46.02000 12.22800 5.6000 2.157447 4.058000 8.665957 19.45800\ncomorensis     47.14286 12.37143 5.8000 2.100000 3.933333 8.714286 19.81429\nquadriocellata 53.00000 13.75000 6.0000 2.200000 4.450000 9.900000 21.15000\ndubia          53.06250 13.21333 6.3000 2.075000 4.418750 8.950000 21.56875\n                   jaww      uhl      lhl\nrobertmertensi 7.350000 7.575000 5.250000\nlaticauda      7.969231 8.316667 5.891667\nlineata        7.241304 7.202703 5.182051\ncomorensis     7.114286 7.314286 5.380000\nquadriocellata 8.350000 8.250000 5.900000\ndubia          7.690000 8.366667 5.753333\n\n# Plot the tree\nplot(final_tree)\n\n\n\n\n\nUse phyl.pca() to run a phylogenetic principal component analysis (PCA) of the morphological data set and tree from practice problem 1. When data for different variables in a PCA have different orders of magnitude, it often makes sense to transform by the natural logarithm and conduct our analysis on the log-transformed values instead of on the original traits. Inspect your data to see if this applies and then decide whether or not to log-transform before undertaking your phylogenetic PCA. After you’ve obtained a result for the PCA, create a screeplot to visualize the distribution of variation between the different principal component axes.\n\n\n# Perform phylogenetic PCA\npca &lt;- phyl.pca(final_tree, final_pheno)\npca\n\nPhylogenetic pca\nStandard deviations:\n        PC1         PC2         PC3         PC4         PC5         PC6 \n0.843018016 0.031026258 0.025212345 0.021589766 0.016268797 0.013849981 \n        PC7         PC8         PC9        PC10 \n0.007047147 0.005435102 0.004776059 0.003284026 \nLoads:\n             PC1         PC2          PC3          PC4           PC5\nsvl    0.9999053 -0.01000824  0.006871026 -0.003374178 -0.0002305335\njaw    0.9961933  0.04141104  0.040942394 -0.030008137  0.0197234893\nnoseye 0.9961428 -0.02767322  0.040672296 -0.019964183 -0.0483030086\neyed   0.9219025  0.06912433  0.000145796 -0.140928915 -0.2706281183\neyeeye 0.9664016  0.12525023 -0.060244831  0.014826908  0.2041541534\nhw     0.9905783  0.07880385 -0.057263869 -0.087077681  0.0166403194\nhn     0.9961222  0.07041295 -0.015318076  0.048329317 -0.0140345807\njaww   0.9808645 -0.04636245 -0.184855183 -0.022132188 -0.0220226136\nuhl    0.9867331 -0.13722798 -0.049202943  0.041799930  0.0236962841\nlhl    0.9772051 -0.11752704 -0.009169470  0.121780363  0.0546134754\n                PC6           PC7           PC8           PC9          PC10\nsvl    -0.005382531 -0.0008324387 -0.0007677909  0.0004646226  0.0004164433\njaw     0.047441908  0.0248727578 -0.0058814817  0.0031244424 -0.0021247618\nnoseye  0.015724732 -0.0006341286  0.0430018976  0.0023434645 -0.0211047680\neyed    0.190365638 -0.0379885680  0.0621004043  0.0581208337  0.0854421226\neyeeye -0.044275914  0.0044588748  0.0467763913  0.0234067434  0.0116596316\nhw      0.023674650 -0.0256000605 -0.0016469256 -0.0134127827 -0.0027369653\nhn      0.002434144  0.0011243296  0.0005459473 -0.0027775843 -0.0002157374\njaww   -0.002093613  0.0190151420 -0.0042700446  0.0142197382 -0.0047639416\nuhl     0.039274297  0.0139984260  0.0132246100 -0.0286562314  0.0078761587\nlhl     0.101021863 -0.0486908262 -0.0123355346  0.0234627715 -0.0090268595\n\n# Create a screeplot with variance explained by each PC\np_screeplot &lt;- data.frame(\n    Variance = signif(as.princomp(pca)$sdev ^ 2, 2),\n    PC = factor(paste0(\"PC\", 1:10), levels = paste0(\"PC\", 1:10))\n) |&gt;\n    ggplot(aes(x = PC, y = Variance * 100)) +\n    geom_col(fill = \"dodgerblue4\", color = \"black\") +\n    geom_text(aes(label = Variance), vjust = -0.3) +\n    ylim(0, 100) +\n    labs(\n        title = \"Screeplot for phylogenetic PCA of Phelsuma sp. morphological traits\",\n        x = \"\", y = \"Variance explained (%)\"\n    ) +\n    theme_bw()\n\np_screeplot\n\n\n\n\n\nUse phylomorphospace() to create a single projection of the phylogeny into morphospace for the first two PC axes from practice problem 1.2. Can you think of a way to project the tree into a space defined by more than two principal component dimensions? Hint: look up the help pages for phylomorphospace3d() and phyloScattergram() for ideas, or consider simply subdividing your plotting device using par(mfrow).\n\n\n# Create phylomorphospace plot for different pairwise combinations of PCs\ncombs &lt;- list(\n    c(1, 2),\n    c(1, 3),\n    c(2, 3),\n    c(1, 4)\n)\n\np_pms &lt;- lapply(combs, function(x) {\n    ## Get phylomorphospace coordinates\n    score_df &lt;- as.data.frame(scores(pca)[, x])\n    cols &lt;- names(score_df)\n    \n    pms &lt;- phylomorphospace(final_tree, score_df)\n    coord &lt;- data.frame(\n        xstart = pms$xx[pms$edge[, 1]],\n        ystart = pms$yy[pms$edge[, 1]],\n        xstop = pms$xx[pms$edge[, 2]],\n        ystop = pms$yy[pms$edge[, 2]],\n        nodestart = pms$edge[, 1],\n        nodestop = pms$edge[, 2]\n    )\n    \n    p_phylomorphospace &lt;- ggplot() +\n        geom_point(\n            data = score_df, \n            aes(x = .data[[cols[1]]], y = .data[[cols[2]]]), \n            size = 3, color = \"darkblue\"\n        ) +\n        geom_segment(\n            data = coord, aes(x = xstart, y = ystart, xend = xstop, yend = ystop), \n            linewidth = 0.5\n        ) +\n        theme_classic() +\n        labs(x = cols[1], y = cols[2])\n    \n    return(p_phylomorphospace)\n})\n\n\n\n\n\n\n\n\n\n\n\n\n# Arrange plots in a panel\nwrap_plots(p_pms) +\n    plot_annotation(\n        title = \"Phylomorphospace of different pairwise combinations of PCs\"\n    )"
  },
  {
    "objectID": "chapter_01.html#references",
    "href": "chapter_01.html#references",
    "title": "1  A brief introduction to phylogenetics in R",
    "section": "References",
    "text": "References\n\n\n\n\nHarmon, Luke J, Jonathan B Losos, T Jonathan Davies, Rosemary G Gillespie, John L Gittleman, W Bryan Jennings, Kenneth H Kozak, et al. 2010. “Early Bursts of Body Size and Shape Evolution Are Rare in Comparative Data.” Evolution 64 (8): 2385–96."
  },
  {
    "objectID": "chapter_02.html#practice-problems",
    "href": "chapter_02.html#practice-problems",
    "title": "2  Phylogenetically independent contrasts",
    "section": "2.1 Practice problems",
    "text": "2.1 Practice problems\n\nRepeat your PIC analysis comparing body mass and home range but for only one clade in your tree: the artiodactyls. Use extract.clade() to pull out this taxon from your tree of mammals. Do the results and conclusions of your analysis change? If so, in what way?\n\n\n# Loading data\nmammalHR &lt;- read.csv(\n    \"http://www.phytools.org/Rbook/2/mammalHR.csv\", row.names = 1\n)\nmammal_tree &lt;- read.tree(\"http://www.phytools.org/Rbook/2/mammalHR.phy\")\n\n# Visualize the tree to see the node number for Artiodactyla\nplotTree(mammal_tree, ftype = \"i\")\nnodelabels(bg = \"white\", cex = 0.5, frame = \"circle\")\n\n\n\n# Extract Artiodactyla (node 75)\nartio_tree &lt;- extract.clade(mammal_tree, node = 75)\nartio_tree\n\n\nPhylogenetic tree with 24 tips and 23 internal nodes.\n\nTip labels:\n  L._guanicoe, C._dromedarius, G._camelopardalis, S._caffer, B._bison, T._oryx, ...\n\nRooted; includes branch lengths.\n\n# Subset the phenotypic data to include only Artiodactyla species\nartio &lt;- mammalHR[artio_tree$tip.label, ]\nhead(artio)\n\n                  bodyMass homeRange\nL._guanicoe             95       0.5\nC._dromedarius         550     100.0\nG._camelopardalis     1075      84.6\nS._caffer              620     138.0\nB._bison               865     133.0\nT._oryx                511      87.5\n\n# Get home range and bodty mass as named vectors\nhome_range &lt;- setNames(artio$homeRange, rownames(artio))\nhome_range\n\n      L._guanicoe    C._dromedarius G._camelopardalis         S._caffer \n            0.500           100.000            84.600           138.000 \n         B._bison           T._oryx         G._granti      G._thomsonii \n          133.000            87.500            20.000             5.300 \n    A._cervicapra          M._kirki     O._americanus     O._canadensis \n            6.500             0.043            22.750            14.330 \n       H._equinus       A._melampus       C._taurinus        D._lunatus \n           80.000             3.800            75.000             2.200 \n    A._buselaphus      A._americana     C._canadensis           D._dama \n            5.000            10.000            12.930             1.300 \n         A._alces       R._tarandus    O._virginianus       O._hemionus \n           16.100            30.000             1.960             2.850 \n\nbody_mass &lt;- setNames(artio$bodyMass, rownames(artio))\nbody_mass\n\n      L._guanicoe    C._dromedarius G._camelopardalis         S._caffer \n            95.00            550.00           1075.00            620.00 \n         B._bison           T._oryx         G._granti      G._thomsonii \n           865.00            511.00             62.50             20.50 \n    A._cervicapra          M._kirki     O._americanus     O._canadensis \n            37.50              5.00            113.50             85.00 \n       H._equinus       A._melampus       C._taurinus        D._lunatus \n           226.50             53.25            216.00            130.00 \n    A._buselaphus      A._americana     C._canadensis           D._dama \n           136.00             50.00            300.00             55.00 \n         A._alces       R._tarandus    O._virginianus       O._hemionus \n           384.00            100.00             57.00             74.00 \n\n\n\n# Compute PICs for home range and body mass\npic_homerange &lt;- pic(log(home_range), artio_tree)\npic_bodymass &lt;- pic(log(body_mass), artio_tree)\n\npic_homerange\n\n          25           26           27           28           29           30 \n-0.132818999 -0.895579093  0.346980350  0.297202240  0.746576874  0.076100243 \n          31           32           33           34           35           36 \n 0.008252110 -0.721206564  1.236975670  0.128802627  0.593911038  0.004718204 \n          37           38           39           40           41           42 \n 0.163415879  0.620547958 -0.361695665  1.025369793 -0.310301482  0.070369259 \n          43           44           45           46           47 \n-0.221826585  0.812177874  0.247172062  0.824430561 -0.264722763 \n\npic_bodymass\n\n         25          26          27          28          29          30 \n 0.03008134 -0.29682517  0.42423891  0.17467000  0.61117696  0.06264270 \n         31          32          33          34          35          36 \n-0.07446331 -0.50642256  0.46686415 -0.01303527  0.49852763 -0.07722967 \n         37          38          39          40          41          42 \n 0.10223052  0.19076822 -0.35642941  0.15952743 -0.01705392 -0.17261385 \n         43          44          45          46          47 \n-0.01519233  0.59978540  0.54363400  0.14003343 -0.18456465 \n\n# Fit linear model to PICs without intercept\npic_model &lt;- lm(pic_homerange ~ pic_bodymass + 0)\nsummary(pic_model)\n\n\nCall:\nlm(formula = pic_homerange ~ pic_bodymass + 0)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.53191 -0.15261  0.00455  0.14829  0.79675 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \npic_bodymass   1.4331     0.2154   6.653 1.09e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3302 on 22 degrees of freedom\nMultiple R-squared:  0.668, Adjusted R-squared:  0.6529 \nF-statistic: 44.26 on 1 and 22 DF,  p-value: 1.091e-06\n\n# Visualizing the model\np_pics &lt;- data.frame(\n    Home_range = pic_homerange, \n    Body_mass = pic_bodymass\n) |&gt;\n    ggplot(aes(x = Body_mass, y = Home_range)) +\n    geom_point(size = 3, color = \"deepskyblue4\") +\n    geom_vline(xintercept = 0, linetype = 3) +\n    geom_hline(yintercept = 0, linetype = 3) +\n    geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ x\") +\n    labs(\n        title = \"Regression of home range on body size for Artiodactyla\",\n        subtitle = \"Regression was performed on phylogenetically independent contrasts (PICs)\",\n        x = \"PICs for log(body mass)\",\n        y = \"PICs for log(range size)\",\n    ) +\n    theme_classic()\n\np_pics\n\n\n\n\nResults and conclusions did not change.\n\n\nOn the book website, we supply some data for a group of Asian barbets (BarbetTree.nex and Barbetdata_mod.csv): members of the bird family Megalaimidae (Gonzalez-Voyer et al. 2013). Using these data and the method of phylogenetic independent contrasts, test for a relationship between the two variables Lnalt and wing. What do you find? How does the slope of your relationship change if you fit Lnalt wing versus wing Lnalt? How does the P-value of a statistical test of this relationship change?\n\n\n# Get data\nbarbet &lt;- read.csv(\n    \"http://www.phytools.org/Rbook/2/Barbetdata.csv\", \n    row.names = 1\n)\nbarbet_tree &lt;- read.nexus(\"http://www.phytools.org/Rbook/2/BarbetTree.nex\")\n\n# Take a look at the data\nhead(barbet)\n\n                                         wing    Lnalt    patch   colour\nCalorhamphus_fuliginosus_fuliginosus 4.388257 5.298317 2.000000 1.666667\nCalorhamphus_fuliginosus_hayi        4.427239 5.298317 2.000000 1.666667\nM_armillaris                         4.532599 7.170120 6.333333 4.000000\nM_asiatica_asiatica                  4.611152 6.802395 7.333333 5.000000\nM_asiatica_davisoni                  4.605170 7.003065 6.666667 3.333333\nM_australis_duvaucelli               4.282206 6.620073 9.000000 4.000000\n                                      Frequency      Length Lnote\nCalorhamphus_fuliginosus_fuliginosus  20.468894   3.1207387 0.260\nCalorhamphus_fuliginosus_hayi         22.483670   3.1371727 0.230\nM_armillaris                          -7.135924 -11.9001412 0.030\nM_asiatica_asiatica                  -10.153448   0.3671016 0.025\nM_asiatica_davisoni                   -9.700025   0.4492719 0.030\nM_australis_duvaucelli                 1.206501  -2.5198843 0.030\n\nbarbet_tree\n\n\nPhylogenetic tree with 42 tips and 41 internal nodes.\n\nTip labels:\n  M_asiatica_asiatica, M_lineata_hodgsoni, M_australis_australis, M_haemacephala_intermedia, M_eximia, M_viridis, ...\n\nRooted; includes branch lengths.\n\n# Check tree and data for inconsistencies\ncheck &lt;- geiger::name.check(barbet_tree, barbet)\ncheck\n\n$tree_not_data\n[1] \"M_asiatica_chersonesus\"    \"M_australis_australis\"    \n[3] \"M_haemacephala_celestinoi\" \"M_haemacephala_delica\"    \n[5] \"M_haemacephala_intermedia\" \"M_haemacephala_rosea\"     \n[7] \"M_lineata_lineata\"         \"M_oorti_faber\"            \n[9] \"M_oorti_sini\"             \n\n$data_not_tree\ncharacter(0)\n\nbarbet_tree &lt;- drop.tip(barbet_tree, check$tree_not_data)\n\n# Define function to fit regression on PICs for variables x and y\nfit_pics &lt;- function(tree, data, x, y) {\n    \n    # Get variables as named vectors\n    var_x &lt;- log(setNames(data[[x]], rownames(data)))\n    var_y &lt;- log(setNames(data[[y]], rownames(data)))\n\n    # Compute PICs\n    pic_x &lt;- pic(var_x, tree)\n    pic_y &lt;- pic(var_y, tree)\n    \n    # Fit linear model to PICs without intercept\n    pic_model &lt;- summary(lm(pic_y ~ pic_x + 0))\n    \n    # Get estimates\n    r2 &lt;- signif(pic_model$r.squared, 1)\n    slope &lt;- signif(pic_model$coefficients[1], 2)\n    p &lt;- format(pic_model$coefficients[4], scientific = TRUE)\n    \n    subtitle &lt;- bquote(beta[1] == .(slope) * \", \" ~ R^2 == .(r2) * \", \" ~ P == .(p))\n\n    # Visualizing the model\n    p_pics &lt;- data.frame(\n        X = pic_x, \n        Y = pic_y\n    ) |&gt;\n        ggplot(aes(x = X, y = Y)) +\n        geom_point(size = 3, color = \"deepskyblue4\") +\n        geom_vline(xintercept = 0, linetype = 3) +\n        geom_hline(yintercept = 0, linetype = 3) +\n        geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ x+0\") +\n        labs(\n            title = paste0(\"Regression of \", y, \" on \", x),\n            subtitle = subtitle,\n            x = paste0(\"PICs for log(\", x, \")\"),\n            y = paste0(\"PICs for log(\", y, \")\")\n        ) +\n        theme_classic()\n    \n    p_pics\n    return(p_pics)\n}\n\n# Fit a regression of `wing` on `Lnalt` using PICs\nmodel1 &lt;- fit_pics(barbet_tree, barbet, \"Lnalt\", \"wing\")\n\n# Fit a regression of `Lnalt` on `wing` using PICs\nmodel2 &lt;- fit_pics(barbet_tree, barbet, \"wing\", \"Lnalt\")\n\n# Visualize plots together\nwrap_plots(\n    model1, model2, ncol = 2\n)\n\n\n\n\nIn both models (regressing wing on Lnalt and regressing Lnalt on wing), there is no significant association association between the variables. The P-value and variance explained remain the same, but the slope (\\(B_1\\)) changes, which is expected considering that predictors and outcomes have been flipped.\n\n\nIf you multiply all the branches of your phylogenetic tree by 100, will your independent contrasts analysis change? Why or why not? Can you confirm this using R code? Don’t forget to use what you learned about the internal structure of a “phylo” object in chapter 1 to modify your tree.\n\n\n# Multiple all branches by 100\nnew_barbet_tree &lt;- barbet_tree\nnew_barbet_tree$edge.length &lt;- new_barbet_tree$edge.length * 100\n\n# Compute PICs for `wing` using original and modified tree\noriginal_pic_wing &lt;- pic(\n    log(setNames(barbet$wing, rownames(barbet))), barbet_tree\n)\nmodified_pic_wing &lt;- pic(\n    log(setNames(barbet$wing, rownames(barbet))), new_barbet_tree\n)\n\n# Are PICs the same?\nidentical(original_pic_wing, modified_pic_wing)\n\n[1] FALSE\n\nhead(original_pic_wing)\n\n          34           35           36           37           38           39 \n-0.004037127 -0.004174157 -0.009872292  0.001271405 -0.004145402  0.019146160 \n\nhead(modified_pic_wing)\n\n           34            35            36            37            38 \n-0.0004037127 -0.0004174157 -0.0009872292  0.0001271405 -0.0004145402 \n           39 \n 0.0019146160 \n\n# Perform regression of `wing` on `Lnalt` using both trees\noriginal_model &lt;- fit_pics(barbet_tree, barbet, \"Lnalt\", \"wing\")\nmodified_model &lt;- fit_pics(new_barbet_tree, barbet, \"Lnalt\", \"wing\")\n\n# Compare models\nwrap_plots(original_model, modified_model)\n\n\n\n\nThe PICs change (PICs using the modified tree are the PICs of the original tree divided by 10), but the results of the regression using PICs do not change, because the relationship between the species (i.e., the tree topology) remained the same after multiplying branch lengths by 100.\n\n\nRepeat the simulation analysis of type I error for OLS, in the last section of the chapter, but using a “pure-birth” model of diversification (i.e., trees simulated using pbtree() but with the extinction rate, d, set to 0). How does this change to the way your phylogenies are simulated affect your results? In particular, does it cause the type I error rate that results from ignoring the phylogeny to go up or go down? Can you explain the differences that you find?\n\n\n# Define function to simulate P-values for OLS and regression on PICs\nsimulate_pvals &lt;- function(birth = 1, death = 0) {\n    \n    # Helper function to simulate trees and discard trees that go extinct\n    sim_tree &lt;- function() { \n        tree &lt;- NULL \n        while(is.null(tree)) {\n            tree &lt;- pbtree(\n                n = 100, b = birth, d = death, extant.only = TRUE, quiet = TRUE\n            )\n        }\n        return(tree)\n    }\n    \n\n    # Simulate 500 trees in a list using replicate\n    trees &lt;- replicate(500, sim_tree(), simplify=FALSE)  \n    class(trees) &lt;- \"multiPhylo\"\n    \n    # Simulate a list of `x` and `y` vectors, one for each tree  \n    x &lt;- lapply(trees, fastBM)\n    y &lt;- lapply(trees, fastBM)\n    \n    # 1) Fit non-phylogenetic regression (OLS) of y ~ x\n    fit_ols &lt;- mapply(function(x, y) lm(y ~ x), x, y, SIMPLIFY=FALSE)\n    \n    p_ols &lt;- vapply(\n        fit_ols, function(x) summary(x)$coefficients[2, 4], numeric(1)\n    )\n    \n    # 2) Fit regression on PICs\n    pic.x &lt;- mapply(pic, x, trees, SIMPLIFY = FALSE)\n    pic.y &lt;- mapply(pic, y, trees, SIMPLIFY = FALSE) \n    fit_pic &lt;- mapply(function(x, y) lm(y ~ x+0), pic.x, pic.y, SIMPLIFY = FALSE)\n    \n    p_pic &lt;- vapply(\n        fit_pic, function(x) summary(x)$coefficients[4], numeric(1)\n    )\n    \n    # Store p-values in a list\n    results &lt;- list(P_OLS = p_ols, P_PIC = p_pic)\n    return(results)\n}\n\n\n# Get P-values for regressions on simulated data\n## Book example\npvals_book &lt;- simulate_pvals(birth = 1, death = 0.8)\n\n## Practice problem (d = 0)\npvals_practice &lt;- simulate_pvals(birth = 1, death = 0)\n\n# Plot P-vals as histograms\nplot_pvals &lt;- rbind(\n    data.frame(P = pvals_book$P_OLS, Method = \"OLS, d = 0.8\"),\n    data.frame(P = pvals_book$P_PIC, Method = \"PIC, d = 0.8\"),\n    data.frame(P = pvals_practice$P_OLS, Method = \"OLS, d = 0\"),\n    data.frame(P = pvals_practice$P_PIC, Method = \"PIC, d = 0\")\n) |&gt;\n    ggplot(aes(x = P)) +\n    geom_histogram(\n        aes(y = after_stat(width * density)),\n        color = \"gray20\", fill = \"gray80\", bins = 30\n    ) +\n    geom_hline(yintercept = 0.05, linetype = 3) +\n    facet_wrap(~Method) +\n    labs(\n        x = \"P-values\", y = \"Relative frequency\",\n        title = \"Distribution of P-values for OLS regression and PIC regression\",\n        subtitle = \"Uncorrelated data were simulated on stochastic birth–death phylogenies\"\n    ) +\n    ylim(0, 0.5) +\n    theme_bw()\n\nplot_pvals\n\n\n\n\nWhen we replace d = 0.8 with d = 0, the type I error rates go down. A possible explanation is that setting d = 0 leads to no extinction in the simulation, leading to a larger number of extant lineages at a given time as compared to d = 0.8. Thus, such larger number of extant lineages increases statistical power, hence leading to lower type I error rates."
  },
  {
    "objectID": "chapter_02.html#references",
    "href": "chapter_02.html#references",
    "title": "2  Phylogenetically independent contrasts",
    "section": "References",
    "text": "References\n\n\n\n\nGonzalez-Voyer, Alejandro, R-J den Tex, Alberto Castelló, and Jennifer A Leonard. 2013. “Evolution of Acoustic and Visual Signals in Asian Barbets.” Journal of Evolutionary Biology 26 (3): 647–59."
  },
  {
    "objectID": "chapter_03.html#references",
    "href": "chapter_03.html#references",
    "title": "3  Phylogenetic generalized least squares",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_04.html#references",
    "href": "chapter_04.html#references",
    "title": "4  Modeling continuous character evolution on a phylogeny",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_05.html#references",
    "href": "chapter_05.html#references",
    "title": "5  Multi-rate, multi-regime, and multivariate models for continuous traits",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_06.html#references",
    "href": "chapter_06.html#references",
    "title": "6  Modeling discrete character evolution on a phylogeny",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_07.html#references",
    "href": "chapter_07.html#references",
    "title": "7  Other models of discrete character evolution",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_08.html#references",
    "href": "chapter_08.html#references",
    "title": "8  Reconstructing ancestral states",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_09.html#references",
    "href": "chapter_09.html#references",
    "title": "9  Analysis of diversification with phylogenies",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_10.html#references",
    "href": "chapter_10.html#references",
    "title": "10  Time- and density-dependent diversification",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_11.html#references",
    "href": "chapter_11.html#references",
    "title": "11  Character-dependent diversification",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_12.html#references",
    "href": "chapter_12.html#references",
    "title": "12  Biogeography and phylogenetic community ecology",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "chapter_13.html#references",
    "href": "chapter_13.html#references",
    "title": "13  Plotting phylogenies and comparative data",
    "section": "References",
    "text": "References"
  }
]